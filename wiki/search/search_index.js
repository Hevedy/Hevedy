var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Introduction","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"index.html#features","title":"Features","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> Method Description CPU      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p>System Requirements</p> <p>Operating System: Windows 7 (x64), Windows 8 (x64), or Windows 10 (x64)</p> <p>RAM: 4 GB or more</p> <p>Display Resolution: Minimum 1280 x 720</p> <p>Processor: 2.8 GHz or higher (dual-core, quad-thread recommended)</p> <p>Graphics Card: Compatible with standard image processing applications</p> <p>Storage: At least 100 MB of free space</p> <p>Ctrl+Alt+Del</p> <p>Linux non official support</p> <p>Works on Linux using Wine but we don't provide official support right now.</p>"},{"location":"index.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purple-image/index.html","title":"Introduction","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"purple-image/index.html#features","title":"Features","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> Method Description CPU      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p>System Requirements</p> <p>Operating System: Windows 7 (x64), Windows 8 (x64), or Windows 10 (x64)</p> <p>RAM: 4 GB or more</p> <p>Display Resolution: Minimum 1280 x 720</p> <p>Processor: 2.8 GHz or higher (dual-core, quad-thread recommended)</p> <p>Graphics Card: Compatible with standard image processing applications</p> <p>Storage: At least 100 MB of free space</p> <p>Ctrl+Alt+Del</p> <p>Linux non official support</p> <p>Works on Linux using Wine but we don't provide official support right now.</p>"},{"location":"purple-image/index.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purple-image/batcher.html","title":"Batch Tools","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"purple-image/batcher.html#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"purple-image/batcher.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purple-image/color-palette.html","title":"Color Palette","text":"<p>Work as common color selector but give you different suggestions of color with different light, intensity and shading.  You can get the RGB, sRGB value or the Hex values that can be used in the game engines color selectors, in websites or even in other image apps. Allow you to create a smaller window and overlap other apps, in this way you can use with other image tools. Can copy the values directly to the clipboard in this way you only need to paste the final value in your image tool, or select the color from your image tool in the window.</p> <p>This tool allow you too to select the color by sRGB and return the value automatic.</p>"},{"location":"purple-image/color-palette.html#color-selector","title":"Color Selector","text":"<p>Pick the colors you want, save them into a palette or automatically copy them to any other software into your clipboard.</p> <ul> <li>sdfsdsd</li> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> <code>Lorem ipsum dolor sit amet</code> <p>Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis.</p> <code>Cras arcu libero</code> <p>Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante.</p> <p>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.</p> <p>fgdgdfgdgdgdgdf  sadfsfsfsdfsfdsfds</p> <p></p> <p></p> <p></p> <p></p> <p>Image caption</p>"},{"location":"purple-image/color-palette.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purple-image/editor.html","title":"Image Editor","text":"<p>The packager tool can help you to combine or split images in layers saving until x2 times of memory per texture for your games.</p> <p>The tool include 5 functions combine, split, convert, package and batch.</p> <p>Note: You can combine or split a maximun of 4 layers per texture ( R G B A ).</p> <p>In difference to the common paid and free image stuites and other image tools, the LUT Editor included in the \"Purpleprint - Image Tools\" is the faster way to create LUT files or just edit the images in real-time for game engines Post-processing or video editing using a set of real-time parameter.</p> <p>This tool give you the control over all the parameters in real-time, while all the common paid tools need to bake the results of each parameter.</p> <p>You can save too the values in a file, in this way you never lost and can replicate the results in different images, just loading it.</p>"},{"location":"purple-image/editor.html#layers-combiner","title":"Layers Combiner","text":"<p>This tool can be used to combine up to 8 layers from individual images into a single image.</p> <p></p> <p>Since the version 1.5.2 comes with a Filtered &amp; Unfiltered option output.</p> <p></p>"},{"location":"purple-image/editor.html#layers-splitter","title":"Layers Splitter","text":"<p>This one works the reverse way of the prior tool, allows to split a image in different images based on it's channels.</p> <p>The UI display a maximum of 4 at time, but you can choose each one display options individually.</p> <p></p>"},{"location":"purple-image/editor.html#layers-splitter-controls","title":"Layers Splitter Controls","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"purple-image/editor.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purple-image/viewer.html","title":"Image Board","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"purple-image/viewer.html#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"purple-image/viewer.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purpleprint/index.html","title":"Introduction","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"purpleprint/index.html#features","title":"Features","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> Method Description CPU      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p>System Requirements</p> <p>Operating System: Windows 7 (x64), Windows 8 (x64), or Windows 10 (x64)</p> <p>RAM: 4 GB or more</p> <p>Display Resolution: Minimum 1280 x 720</p> <p>Processor: 2.8 GHz or higher (dual-core, quad-thread recommended)</p> <p>Graphics Card: Compatible with standard image processing applications</p> <p>Storage: At least 100 MB of free space</p> <p>Ctrl+Alt+Del</p> <p>Linux non official support</p> <p>Works on Linux using Wine but we don't provide official support right now.</p>"},{"location":"purpleprint/index.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purpleprint/audio/index.html","title":"Introduction","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"purpleprint/audio/index.html#features","title":"Features","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> Method Description CPU      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p>System Requirements</p> <p>Operating System: Windows 7 (x64), Windows 8 (x64), or Windows 10 (x64)</p> <p>RAM: 4 GB or more</p> <p>Display Resolution: Minimum 1280 x 720</p> <p>Processor: 2.8 GHz or higher (dual-core, quad-thread recommended)</p> <p>Graphics Card: Compatible with standard image processing applications</p> <p>Storage: At least 100 MB of free space</p> <p>Ctrl+Alt+Del</p> <p>Linux non official support</p> <p>Works on Linux using Wine but we don't provide official support right now.</p>"},{"location":"purpleprint/audio/index.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purpleprint/core/index.html","title":"Introduction","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"purpleprint/core/index.html#features","title":"Features","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> Method Description CPU      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p>System Requirements</p> <p>Operating System: Windows 7 (x64), Windows 8 (x64), or Windows 10 (x64)</p> <p>RAM: 4 GB or more</p> <p>Display Resolution: Minimum 1280 x 720</p> <p>Processor: 2.8 GHz or higher (dual-core, quad-thread recommended)</p> <p>Graphics Card: Compatible with standard image processing applications</p> <p>Storage: At least 100 MB of free space</p> <p>Ctrl+Alt+Del</p> <p>Linux non official support</p> <p>Works on Linux using Wine but we don't provide official support right now.</p>"},{"location":"purpleprint/core/index.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purpleprint/core/api/purpleprint-core-camera-tracker-editor.html","title":"PurpleprintCoreCameraTrackerEditor.h","text":""},{"location":"purpleprint/core/api/purpleprint-core-camera-tracker-editor.html#classstruct-fpurpleprintcorecameratrackereditor","title":"Class/Struct: FPurpleprintCoreCameraTrackerEditor","text":"<ul> <li>\u274c <code>static FTransform GetLastCameraTransform();</code> </li> </ul> <ul> <li>\u274c <code>static FVector GetLastCameraLocation();</code> </li> </ul> <ul> <li>\u274c <code>static FRotator GetLastCameraRotation();</code> </li> </ul> <ul> <li>\u274c <code>static void SetLastCameraLocation(const FVector&amp; NewLocation);</code> </li> </ul> <ul> <li>\u274c <code>static void SetLastCameraRotation(const FRotator&amp; NewRotation);</code> </li> </ul>"},{"location":"purpleprint/core/api/purpleprint-core-math.html","title":"PurpleprintCoreMath.h","text":""},{"location":"purpleprint/core/api/purpleprint-core-math.html#classstruct-upurpleprintcoremath-inherits-from-ublueprintfunctionlibrary","title":"Class/Struct: UPurpleprintCoreMath (inherits from UBlueprintFunctionLibrary)","text":"<ul> <li>\u2705 <code>static float Cbrt( const float Value );</code>  Slower than Log2 but more accurate 1.0 / Loge(10)= 0.4342944f Missing from C++ lib so here are, the Degress operations Returns cube root</li> </ul> <ul> <li>\u2705 <code>static float OneLimit(const float Value);</code> </li> </ul> <ul> <li>\u2705 <code>static float OneMinus(const float Value);</code> </li> </ul> <ul> <li>\u2705 <code>static int32 NegateInt(const int32 Value);</code> </li> </ul> <ul> <li>\u2705 <code>static float Negate(const float Value);</code> </li> </ul> <ul> <li>\u2705 <code>static int32 ReverseInt(const int32 Value);</code> </li> </ul> <ul> <li>\u2705 <code>static float Reverse(const float Value);</code> </li> </ul> <ul> <li>\u274c <code>static double CalculateCameraHeightForArea(double DesiredWidthUU, float VerticalFOVDegrees);</code>  #if UE_VERSION_NEWER_THAN(5, 2, 0) #endif Cannot set a check for newer versions here, UFUNCTION isn't supported inside #if verison check</li> </ul> <ul> <li>\u2705 <code>static float CalculateCameraHeightForAreaFloat(float DesiredWidthUU, float VerticalFOVDegrees);</code> </li> </ul> <ul> <li>\u2705 <code>static FTransform TransformsAddMasked(const FTransform&amp; A, const FTransform&amp; B, bool bLocation = true, bool bRotation = true, bool bScale = false, bool bReturnFirst = true);</code> </li> </ul> <ul> <li>\u2705 <code>static FTransform TransformsSubMasked(const FTransform&amp; A, const FTransform&amp; B, bool bLocation = true, bool bRotation = true, bool bScale = false, bool bReturnFirst = true);</code> </li> </ul> <ul> <li>\u2705 <code>static FTransform TransformsMulMasked(const FTransform&amp; A, const FTransform&amp; B, bool bLocation = true, bool bRotation = true, bool bScale = false, bool bbReturnFirst = true);</code> </li> </ul> <ul> <li>\u2705 <code>static FTransform TransformsCombine(const FTransform&amp; A, const FTransform&amp; B);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector GetClosestPointOnSphereSurface(const FVector&amp; SphereCenter, float SphereRadius, const FVector&amp; TargetPoint);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector GetClosestPointOnDomeSurface(const FVector&amp; DomeCenter, float DomeRadius, const FVector&amp; TargetPoint);</code> </li> </ul> <ul> <li>\u2705 <code>static float SpringFloat(float Current, float Target, float&amp; Velocity, float Frequency, float Damping, float DeltaTime);</code> </li> </ul> <ul> <li>\u2705 <code>static bool FLinearColorNearEqual(const FLinearColor A, const FLinearColor B, const bool bIgnoreAlpha = true);</code> </li> </ul> <ul> <li>\u2705 <code>static float BoxPerimeter(const float SizeX, const float SizeY);</code> </li> </ul> <ul> <li>\u2705 <code>static float BoxDiagonal(const float SizeX, const float SizeY);</code> </li> </ul> <ul> <li>\u2705 <code>static float BoxSide(const float Diagonal);</code> </li> </ul> <ul> <li>\u2705 <code>static float VectorDistance(const FVector A, const FVector B);</code> </li> </ul> <ul> <li>\u2705 <code>static float Distance2D(const FVector2D A, const FVector2D B);</code> </li> </ul> <ul> <li>\u2705 <code>static float GetVectorsAngleRadiants(FVector A, FVector B);</code> </li> </ul> <ul> <li>\u2705 <code>static float GetVectorsAngleDegrees(FVector A, FVector B);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector GetPointOnLineAtDistance(FVector Start, FVector End, float Distance);</code> </li> </ul> <ul> <li>\u2705 <code>static float LerpLinearBounce(float Alpha);</code> </li> </ul> <ul> <li>\u2705 <code>static float LerpLinearBounceAuto(float&amp; Alpha, float Delta, float DeltaSpeed = 1.0f);</code>  Make callable because will return only once</li> </ul> <ul> <li>\u2705 <code>static int32 NormalizeInRangeRoulette(const int32 Value, const int32 Min, const int32 Max);</code>  Returns the float in range of min and max can cross up or down</li> </ul> <ul> <li>\u2705 <code>static int32 IntegerCount(const int32 IntValue, const bool Fast = true);</code>  Returns the number of characters in the int</li> </ul> <ul> <li>\u2705 <code>static int32 FloatCount(const float FloatValue, const bool Fast = true);</code>  Returns the number of characters in the float</li> </ul> <ul> <li>\u2705 <code>static int32 DecimalCount(const float FloatValue);</code>  Returns the number decimals in the float</li> </ul> <ul> <li>\u2705 <code>static uint8 BGetCloser(uint8 Ref, uint8 A, uint8 B);</code>  Returns the closer value of A and B</li> </ul> <ul> <li>\u2705 <code>static uint8 BGetFurther(uint8 Ref, uint8 A, uint8 B);</code>  Returns the further value of A and B</li> </ul> <ul> <li>\u2705 <code>static int32 IGetCloser(int32 Ref, int32 A, int32 B);</code>  Returns the closer value of A and B</li> </ul> <ul> <li>\u2705 <code>static int32 IGetFurther(int32 Ref, int32 A, int32 B);</code>  Returns the further value of A and B</li> </ul> <ul> <li>\u2705 <code>static float FGetCloser(float Ref, float A, float B);</code>  Returns the closer value of A and B</li> </ul> <ul> <li>\u2705 <code>static float FGetFurther(float Ref, float A, float B);</code>  Returns the further value of A and B</li> </ul> <ul> <li>\u2705 <code>static uint8 BGetCloserSubNum(uint8 Ref, uint8 RefA, uint8 RefB, uint8 A, uint8 B);</code>  Returns the closer value of A and B using provided numbers</li> </ul> <ul> <li>\u2705 <code>static uint8 BGetFurtherSubNum(uint8 Ref, uint8 RefA, uint8 RefB, uint8 A, uint8 B);</code>  Returns the further value of A and B using provided numbers</li> </ul> <ul> <li>\u2705 <code>static int32 IGetCloserSubNum(int32 Ref, int32 RefA, int32 RefB, int32 A, int32 B);</code>  Returns the closer value of A and B using provided numbers</li> </ul> <ul> <li>\u2705 <code>static int32 IGetFurtherSubNum(int32 Ref, int32 RefA, int32 RefB, int32 A, int32 B);</code>  Returns the further value of A and B using provided numbers</li> </ul> <ul> <li>\u2705 <code>static float FGetCloserSubNum(float Ref, float RefA, float RefB, float A, float B);</code>  Returns the closer value of A and B using provided numbers</li> </ul> <ul> <li>\u2705 <code>static float FGetFurtherSubNum(float Ref, float RefA, float RefB, float A, float B);</code>  Returns the further value of A and B using provided numbers</li> </ul> <ul> <li>\u2705 <code>static void CloserByteArray(const uint8 ByteRefValue, const TArray&lt;uint8&gt;&amp; ByteArray, const bool NotEqual, int32&amp; IndexOfCloserValue, uint8&amp; CloserValue);</code>  Returns the closer byte in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void FurtherByteArray(const uint8 ByteRefValue, const TArray&lt;uint8&gt;&amp; ByteArray, int32&amp; IndexOfFurtherValue, uint8&amp; FurtherValue);</code>  Returns the further byte in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void CloserIntegerArray(const int32 IntRefValue, const TArray&lt;int32&gt;&amp; IntArray, const bool NotEqual, int32&amp; IndexOfCloserValue, int32&amp; CloserValue);</code>  Returns the closer integer in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void FurtherIntegerArray(const int32 IntRefValue, const TArray&lt;int32&gt;&amp; IntArray, int32&amp; IndexOfFurtherValue, int32&amp; FurtherValue);</code>  Returns the further integer in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void CloserFloatArray(const float FloatRefValue, const TArray&lt;float&gt;&amp; FloatArray, const bool NotEqual, int32&amp; IndexOfCloserValue, float&amp; CloserValue);</code>  Returns the closer float in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void FurtherFloatArray(const float FloatRefValue, const TArray&lt;float&gt;&amp; FloatArray, int32&amp; IndexOfFurtherValue, float&amp; FurtherValue);</code>  Returns the further float in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void MinByteArray(const TArray&lt;uint8&gt;&amp; ByteArray, const int32 NumberOfIndexToDiscard, int32&amp; IndexOfMinValue, float&amp; MinValue);</code>  Returns the min byte in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void MaxByteArray(const TArray&lt;uint8&gt;&amp; ByteArray, const int32 NumberOfIndexToDiscard, int32&amp; IndexOfMaxValue, float&amp; MaxValue);</code>  Returns the max byte in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void MinIntegerArray(const TArray&lt;int32&gt;&amp; IntArray, const int32 NumberOfIndexToDiscard, int32&amp; IndexOfMinValue, float&amp; MinValue);</code>  Returns the min integer in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void MaxIntegerArray(const TArray&lt;int32&gt;&amp; IntArray, const int32 NumberOfIndexToDiscard, int32&amp; IndexOfMaxValue, float&amp; MaxValue);</code>  Returns the max integer in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void MinFloatArray(const TArray&lt;float&gt;&amp; FloatArray, const int32 NumberOfIndexToDiscard, int32&amp; IndexOfMinValue, float&amp; MinValue);</code>  Returns the min float in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u2705 <code>static void MaxFloatArray(const TArray&lt;float&gt;&amp; FloatArray, const int32 NumberOfIndexToDiscard, int32&amp; IndexOfMaxValue, float&amp; MaxValue);</code>  Returns the max float in the array and their index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty.</li> </ul> <ul> <li>\u274c <code>return T();</code>  Returns closer value in a generic way Returns further value in a generic way Closer number to given of Array @param    Array of templated type @param  Reference value templated type to compare @param    Optional boolean to search only the closer values and no the equals @param  Optional pointer for returning the index of the closer element, if multiple closer elements the first index is returned @return The closer value found in the array or default value if the array was empty or can't find a correct value</li> </ul> <ul> <li>\u274c <code>return T();</code>  Further number to given of Array @param    Array of templated type @param  Reference value templated type to compare @param    Optional pointer for returning the index of the further element, if multiple further elements the first index is returned @return   The further value found in the array or default value if the array was empty</li> </ul> <ul> <li>\u274c <code>return TT();</code>  Closer number to given of Array @param Array of templated type @param  Reference value templated type to compare @param    Optional boolean to search only the closer values and no the equals @param  Optional pointer for returning the index of the closer element, if multiple closer elements the first index is returned @return The closer value found in the array or default value if the array was empty or can't find a correct value</li> </ul>"},{"location":"purpleprint/core/api/purpleprint-core-math.html#classstruct-upurpleprintcoremath","title":"Class/Struct: UPurpleprintCoreMath","text":"<ul> <li> <p><code>T CurCloser = ((Reference - Values[0]) &gt;= (T)0) ? (Reference - Values[0]) : -(Reference - Values[0]);</code></p> </li> <li> <p><code>int32 CurCloserIndex = 0;</code></p> </li> <li> <p><code>T CurFurther = ((Reference - Values[0]) &gt;= (T)0) ? (Reference - Values[0]) : -(Reference - Values[0]);</code></p> </li> <li> <p><code>int32 CurFurtherIndex = 0;</code></p> </li> <li> <p><code>TArray&lt;T&gt; keysArray;</code></p> </li> <li> <p><code>TArray&lt;TT&gt; valuesArray;</code></p> </li> <li> <p><code>T curCloser = ((Reference - keysArray[0]) &gt;= (T)0) ? (Reference - keysArray[0]) : -(Reference - keysArray[0]);</code></p> </li> </ul> <p>_Values  </p> <ul> <li><code>int32 curCloserIndex = 0;</code></li> </ul>"},{"location":"purpleprint/core/api/purpleprint-core-misc-editor.html","title":"PurpleprintCoreMiscEditor.h","text":""},{"location":"purpleprint/core/api/purpleprint-core-misc-editor.html#classstruct-upurpleprintcoremisceditor-inherits-from-ublueprintfunctionlibrary","title":"Class/Struct: UPurpleprintCoreMiscEditor (inherits from UBlueprintFunctionLibrary)","text":"<ul> <li>\u2705 <code>static FTransform GetEditorActiveCameraTransform();</code> </li> </ul> <ul> <li>\u2705 <code>static FVector GetEditorActiveCameraLocation();</code> </li> </ul> <ul> <li>\u2705 <code>static FRotator GetEditorActiveCameraRotation();</code> </li> </ul>"},{"location":"purpleprint/core/api/purpleprint-core-misc.html","title":"PurpleprintCoreMisc.h","text":""},{"location":"purpleprint/core/api/purpleprint-core-misc.html#classstruct-upurpleprintcoremisc-inherits-from-ublueprintfunctionlibrary","title":"Class/Struct: UPurpleprintCoreMisc (inherits from UBlueprintFunctionLibrary)","text":"<ul> <li>\u2705 <code>static EPurpleCoreAxis PurpleCoreAlignAxisToAxis(EPurpleCoreAlignAxis Align);</code> </li> </ul> <ul> <li>\u2705 <code>static EPurpleCoreAlignAxis PurpleCoreAxisToAlignAxis(EPurpleCoreAxis Axis);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector GetAxisVectorFromTransform(const FTransform&amp; Transform, EPurpleCoreAxis Align);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector GetAlignVectorFromTransform(const FTransform&amp; Transform, EPurpleCoreAlignAxis Align);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector2D FloatSplitToVector2D( const float FloatValue );</code>  Returns FVector2D(A,B) from a float A.B</li> </ul> <ul> <li>\u2705 <code>static FVector FloatSplitToVector( const float FloatValue );</code>  Returns FVector(A,B,0) from a float A.B</li> </ul> <ul> <li>\u2705 <code>static FVector4 FloatSplitToVector4( const float FloatValue );</code>  Returns FVector4(A,B,0,0) from a float A.B</li> </ul> <ul> <li>\u2705 <code>static FVector2D ClampVector2D(FVector2D Value, FVector2D Min, FVector2D Max);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector ClampVector(FVector Value, FVector Min, FVector Max);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector4 ClampVector4(FVector4 Value, FVector4 Min, FVector4 Max);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector2D VectorToVector2D( const FVector &amp;VecValue );</code>  Returns FVector2D(A,B) from the FVector(A,B,C)</li> </ul> <ul> <li>\u2705 <code>static FVector2D Vector4ToVector2D( const FVector4 &amp;Vec4Value );</code>  Returns FVector2D(A,B) from the FVector4(A,B,C,D)</li> </ul> <ul> <li>\u2705 <code>static FVector VectorIntToVector( const FIntVector &amp;VecIntValue );</code>  Returns FVector(A,B,0) from the FVector2D(A,B)</li> </ul> <ul> <li>\u2705 <code>static FVector Vector2DToVector( const FVector2D &amp;Vec2Value );</code>  Returns FVector(A,B,0) from the FVector2D(A,B)</li> </ul> <ul> <li>\u2705 <code>static FVector Vector4ToVector( const FVector4 &amp;Vec4Value );</code>  Returns FVector(A,B,C) from the FVector4(A,B,C,D)</li> </ul> <ul> <li>\u2705 <code>static FIntVector VectorToVectorInt( const FVector &amp;VecValue );</code>  Returns FVector(A,B,0) from the FVector2D(A,B)</li> </ul> <ul> <li>\u2705 <code>static FVector4 Vector2DToVector4( const FVector2D &amp;Vec2Value );</code>  Returns FVector4(A,B,0,0) from the FVector2D(A,B)</li> </ul> <ul> <li>\u2705 <code>static FVector4 VectorToVector4( const FVector &amp;VecValue );</code>  Returns FVector4(A,B,C,0) from the FVector(A,B,C)</li> </ul> <ul> <li>\u2705 <code>static FRotator RotatorOrderInvert( const FRotator &amp;RotValue );</code>  Returns FRotator(C,B,A) from the FRotator(A,B,C)</li> </ul> <ul> <li>\u2705 <code>static FVector2D Vector2DOrderInvert( const FVector2D &amp;Vec2Value );</code>  Returns FVector2D(B,A) from the FVector2D(A,B)</li> </ul> <ul> <li>\u2705 <code>static FVector VectorOrderInvert( const FVector &amp;VecValue );</code>  Returns FVector(C,B,A) from the FVector(A,B,C)</li> </ul> <ul> <li>\u2705 <code>static FVector4 Vector4OrderInvert( const FVector4 &amp;Vec4Value );</code>  Returns FVector4(D,C,B,A) from the FVector4(A,B,C,D)</li> </ul> <ul> <li>\u2705 <code>static FRotator RotatorOrderRight( const FRotator &amp;RotValue );</code>  Returns FRotator(C,A,B) from the FRotator(A,B,C)</li> </ul> <ul> <li>\u2705 <code>static FVector VectorOrderRight( const FVector &amp;VecValue );</code>  Returns FVector(C,A,B) from the FVector(A,B,C)</li> </ul> <ul> <li>\u2705 <code>static FVector4 Vector4OrderRight( const FVector4 &amp;Vec4Value );</code>  Returns FVector(D,A,B,C) from the FVector(A,B,C)</li> </ul> <ul> <li>\u2705 <code>static FRotator RotatorOrderLeft( const FRotator &amp;RotValue );</code>  Returns FRotator(B,C,A) from the FRotator(A,B,C)</li> </ul> <ul> <li>\u2705 <code>static FVector VectorOrderLeft( const FVector &amp;VecValue );</code>  Returns FVector(B,C,A) from the FVector(A,B,C)</li> </ul> <ul> <li>\u2705 <code>static FVector4 Vector4OrderLeft( const FVector4 &amp;Vec4Value );</code>  Returns FVector(B,C,D,A) from the FVector(A,B,C,D)</li> </ul> <ul> <li>\u2705 <code>static uint8 GetByteArrayAlpha(const TArray&lt;uint8&gt;&amp; Array, const float Alpha);</code>  Given an Alpha value get the aprox value in the array</li> </ul> <ul> <li>\u2705 <code>static int32 GetIntegerArrayAlpha(const TArray&lt;int32&gt;&amp; Array, const float Alpha);</code>  Given an Alpha value get the aprox value in the array</li> </ul> <ul> <li>\u2705 <code>static float GetFloatArrayAlpha(const TArray&lt;float&gt;&amp; Array, const float Alpha);</code>  Given an Alpha value get the aprox value in the array</li> </ul> <ul> <li>\u2705 <code>static FVector2D GetVector2DArrayAlpha(const TArray&lt;FVector2D&gt;&amp; Array, const float Alpha);</code>  Given an Alpha value get the aprox value in the array</li> </ul> <ul> <li>\u2705 <code>static FVector GetVectorArrayAlpha(const TArray&lt;FVector&gt;&amp; Array, const float Alpha);</code>  Given an Alpha value get the aprox value in the array</li> </ul> <ul> <li>\u2705 <code>static FRotator GetRotatorArrayAlpha(const TArray&lt;FRotator&gt;&amp; Array, const float Alpha);</code>  Given an Alpha value get the aprox value in the array</li> </ul> <ul> <li>\u2705 <code>static FTransform GetTransformArrayAlpha(const TArray&lt;FTransform&gt;&amp; Array, const float Alpha);</code>  Given an Alpha value get the aprox value in the array</li> </ul> <ul> <li>\u2705 <code>static FTransform GetTransformArrayAlphaLerp(const TArray&lt;FTransform&gt;&amp; Array, const float Alpha, const bool bLoop = false);</code>  Given an Alpha value get the aprox value in the array</li> </ul> <ul> <li>\u2705 <code>static FVector GetActiveCameraLocation(const UObject* WorldContextObject, FRotator&amp; Rotation);</code> </li> </ul> <ul> <li>\u2705 <code>static AActor* SpawnActorClone(AActor* Actor, const FTransform&amp; Transform);</code> </li> </ul> <ul> <li>\u2705 <code>static void CopySceneComponentParams(USceneComponent* Source, USceneComponent* Target);</code> </li> </ul> <ul> <li>\u2705 <code>static void CopyPrimitiveComponentParams(UPrimitiveComponent* Source, UPrimitiveComponent* Target, bool bCopyMaterials = true);</code> </li> </ul> <ul> <li>\u2705 <code>static void CopyStaticMeshComponentParams(UStaticMeshComponent* Source, UStaticMeshComponent* Target);</code> </li> </ul> <ul> <li>\u2705 <code>static void CopyDecalComponentParams(UDecalComponent* Source, UDecalComponent* Target);</code> </li> </ul> <ul> <li>\u2705 <code>static void CopyNiagaraComponentParams(UNiagaraComponent* Source, UNiagaraComponent* Target);</code> </li> </ul> <ul> <li>\u2705 <code>static void CopyParticleComponentParams(UParticleSystemComponent* Source, UParticleSystemComponent* Target);</code> </li> </ul> <ul> <li>\u2705 <code>static bool IsValidCollisionProfileName(FName ProfileName);</code> </li> </ul> <ul> <li>\u2705 <code>static TArray&lt;FName&gt; GetAllCollisionProfileNames();</code>  This function is editor only</li> </ul> <ul> <li>\u2705 <code>static bool SetPrimitiveComponentMaterials(UPrimitiveComponent* Component, TArray&lt;UMaterialInterface*&gt; Materials);</code> </li> </ul> <ul> <li>\u2705 <code>static bool SetActorStaticMeshMaterials(AStaticMeshActor* Actor, TArray&lt;UMaterialInterface*&gt; Materials);</code> </li> </ul>"},{"location":"purpleprint/core/api/purpleprint-core-misc.html#classstruct-fpurpletracestruct","title":"Class/Struct: FPurpleTraceStruct","text":"<ul> <li> <p><code>FVector Origin = FVector::ZeroVector;</code></p> </li> <li> <p><code>float Length = 200.f;</code></p> </li> <li> <p><code>EPurpleCoreAxis Direction = EPurpleCoreAxis::eZN;</code></p> </li> <li> <p><code>FVector DirectionVector = FVector(0.f, 0.f, -1.f);</code></p> </li> </ul> <p>Alternative vector manually set  </p> <ul> <li> <p><code>TEnumAsByte&lt;ETraceTypeQuery&gt; Channel = ETraceTypeQuery::TraceTypeQuery1;</code></p> </li> <li> <p><code>bool bComplex = true;</code></p> </li> <li> <p><code>bool bIgnoreSelf = true;</code></p> </li> <li> <p><code>TArray&lt;AActor*&gt; ActorsToIgnore;</code></p> </li> <li> <p><code>bool bDebug = false;</code></p> </li> </ul>"},{"location":"purpleprint/core/api/purpleprint-core-misc.html#classstruct-fpurpletracealignstruct","title":"Class/Struct: FPurpleTraceAlignStruct","text":"<ul> <li> <p><code>FVector Origin = FVector::ZeroVector;</code></p> </li> <li> <p><code>float Length = 200.f;</code></p> </li> <li> <p><code>EPurpleCoreAlignAxis Direction = EPurpleCoreAlignAxis::eFree;</code></p> </li> <li> <p><code>FVector DirectionVector = FVector(0.f, 0.f, -1.f);</code></p> </li> </ul> <p>Alternative vector manually set  </p> <ul> <li> <p><code>TEnumAsByte&lt;ETraceTypeQuery&gt; Channel = ETraceTypeQuery::TraceTypeQuery1;</code></p> </li> <li> <p><code>bool bComplex = true;</code></p> </li> <li> <p><code>bool bIgnoreSelf = true;</code></p> </li> <li> <p><code>TArray&lt;AActor*&gt; ActorsToIgnore;</code></p> </li> <li> <p><code>bool bAlignNormal = true;</code></p> </li> <li> <p><code>FVector AlignNormalMask = FVector(0.f, 0.f, 1.f);</code></p> </li> <li> <p><code>bool bDebug = false;</code></p> </li> </ul>"},{"location":"purpleprint/core/api/purpleprint-core-platform.html","title":"PurpleprintCorePlatform.h","text":""},{"location":"purpleprint/core/api/purpleprint-core-platform.html#classstruct-upurpleprintcoreplatform-inherits-from-ublueprintfunctionlibrary","title":"Class/Struct: UPurpleprintCorePlatform (inherits from UBlueprintFunctionLibrary)","text":"<ul> <li>\u2705 <code>static FString GetObjectFullName(UObject* Object);</code> </li> </ul> <ul> <li>\u2705 <code>static FString GetSoftObjectName(TSoftObjectPtr&lt;UObject&gt; InObject);</code> </li> </ul> <ul> <li>\u2705 <code>static FName GetPersistentLevelName(class UObject* WorldContextObject);</code> </li> </ul> <ul> <li>\u2705 <code>static FName GetStreamLevelNameFromActor(AActor* Actor);</code> </li> </ul> <ul> <li>\u2705 <code>static FName GetStreamLevelNameFromReference(const TSoftObjectPtr&lt;UWorld&gt; World);</code> </li> </ul> <ul> <li>\u2705 <code>static FName GetCorrectAssetName(const FString String);</code> </li> </ul> <ul> <li>\u2705 <code>static bool IsEditorBuild();</code> </li> </ul> <ul> <li>\u2705 <code>static bool IsDebugBuild();</code> </li> </ul> <ul> <li>\u2705 <code>static bool IsDevelopmentBuild();</code> </li> </ul> <ul> <li>\u2705 <code>static bool IsShippingBuild();</code> </li> </ul> <ul> <li>\u2705 <code>static void GetPrimaryMonitorResolution(int32&amp; Width, int32&amp; Height);</code>  Returns the primary monitor resolution.</li> </ul> <ul> <li>\u2705 <code>static TArray&lt;FPurpleDisplayInfo&gt; GetMonitorsInfo();</code> </li> </ul> <ul> <li>\u2705 <code>static int32 GetMonitorsNum();</code> </li> </ul> <ul> <li>\u2705 <code>static FPurpleDisplayInfo GetPrimaryMonitorInfo();</code> </li> </ul> <ul> <li>\u2705 <code>static int32 GetPrimaryMonitorIndex();</code> </li> </ul> <ul> <li>\u2705 <code>static FString GetPrimaryMonitorName();</code> </li> </ul> <ul> <li>\u2705 <code>static bool IsIndexPrimaryMonitor(const int32 Index);</code> </li> </ul> <ul> <li>\u2705 <code>static FPurpleDisplayInfo GetMonitorInfoByIndex(const int32 Index);</code> </li> </ul> <ul> <li>\u2705 <code>static FString GetMonitorName(const int32 Index);</code> </li> </ul> <ul> <li>\u274c <code>static bool GetSupportedFullscreenResolutionsByIndex(TArray&lt;FIntPoint&gt;&amp; Resolutions, const int32 Index);</code>  FIntPoint not exposed to Blueprints sadly</li> </ul> <ul> <li>\u2705 <code>static int32 DateTimeToUnixTimeStamp(const FDateTime&amp; DateTime);</code> </li> </ul> <ul> <li>\u274c <code>static int64 DateTimeToUnixTimeStamp64(const FDateTime&amp; DateTime);</code> </li> </ul> <ul> <li>\u2705 <code>static FString GetCPUBrandName();</code> </li> </ul> <ul> <li>\u2705 <code>static FString GetCPUVendorName();</code> </li> </ul> <ul> <li>\u2705 <code>static int32 GetCPUCores();</code> </li> </ul> <ul> <li>\u2705 <code>static FString GetGPUBrandName();</code> </li> </ul> <ul> <li>\u2705 <code>static FString GetGPUDriverInfo();</code> </li> </ul> <ul> <li>\u2705 <code>static FString GetOSVersion();</code> </li> </ul> <ul> <li>\u2705 <code>static FString GetNetRoleString(const ENetRole Role);</code> </li> </ul> <ul> <li>\u274c <code>static FString GetNetModeString(const ENetMode Mode);</code>  Undefined for Blueprints so cannot be exposed</li> </ul>"},{"location":"purpleprint/core/api/purpleprint-core-platform.html#classstruct-fpurpledisplayinfo","title":"Class/Struct: FPurpleDisplayInfo","text":"<ul> <li> <p><code>FString Name;</code></p> </li> <li> <p><code>FString ID;</code></p> </li> <li> <p><code>int32 NativeWidth = 0;</code></p> </li> <li> <p><code>int32 NativeHeight = 0;</code></p> </li> <li> <p><code>FIntPoint MaxResolution = FIntPoint(ForceInitToZero);</code></p> </li> <li> <p><code>bool bIsPrimary = false;</code></p> </li> <li> <p><code>int32 DPI = 0;</code></p> </li> </ul>"},{"location":"purpleprint/core/api/purpleprint-core-random.html","title":"PurpleprintCoreRandom.h","text":""},{"location":"purpleprint/core/api/purpleprint-core-random.html#classstruct-upurpleprintcorerandom-inherits-from-ublueprintfunctionlibrary","title":"Class/Struct: UPurpleprintCoreRandom (inherits from UBlueprintFunctionLibrary)","text":"<ul> <li>\u2705 <code>static int32 GetRandomIndexByWeight( const TArray&lt;float&gt; Weights);</code>  Returns a pseudo - random integer index based on weights.</li> </ul> <ul> <li>\u2705 <code>static int32 GetRandomIndexByWeightStream(FRandomStream const&amp; Stream, const TArray&lt;float&gt; Weights);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector RandomVector(FVector Min, FVector Max);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector RandomVectorStream(FRandomStream const&amp; Stream, FVector Min, FVector Max);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector RandomVectorBox(FBox Range);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector RandomVectorBoxStream(FRandomStream const&amp; Stream, FBox Range);</code> </li> </ul> <ul> <li>\u2705 <code>static FRotator RandomRotatorBox(FBox Range);</code> </li> </ul> <ul> <li>\u2705 <code>static FRotator RandomRotatorBoxStream(FRandomStream const&amp; Stream, FBox Range);</code> </li> </ul> <ul> <li>\u2705 <code>static int32 RandomRange(FInt32Range Range);</code> </li> </ul> <ul> <li>\u2705 <code>static int32 RandomRangeStream(FRandomStream const&amp; Stream, FInt32Range Range);</code> </li> </ul> <ul> <li>\u2705 <code>static float RandomFloatRange(FFloatRange Range);</code> </li> </ul> <ul> <li>\u2705 <code>static float RandomFloatRangeStream(FRandomStream const&amp; Stream, FFloatRange Range);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector2D GetRandomPointInCircle(const float Radius = 100.f, const float InnerRadius = 0.0f);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector2D GetRandomPointInCircleStream(FRandomStream const&amp; Stream, const float Radius = 100.f, const float InnerRadius = 0.0f);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector GetRandomPointInSphere(const float Radius = 100.f, const bool bAlt = false, const FVector Location = FVector::ZeroVector);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector GetRandomPointInSphereStream(FRandomStream const&amp; Stream, const float Radius = 100.f, const bool bAlt = false, const FVector Location = FVector::ZeroVector);</code> </li> </ul> <ul> <li>\u2705 <code>static FVector GetRandomPointInBoundingBoxStream(FRandomStream const&amp; Stream, const FVector Origin, const FVector BoxExtent);</code> </li> </ul>"},{"location":"purpleprint/core/api/actors/purpleprint-core-manager-actor.html","title":"PurpleprintCoreManagerActor.h","text":""},{"location":"purpleprint/core/api/actors/purpleprint-core-manager-actor.html#classstruct-apurpleprintcoremanageractor-inherits-from-aactor","title":"Class/Struct: APurpleprintCoreManagerActor (inherits from AActor)","text":"<ul> <li>\u2705 <code>virtual void SetSeed(int32 Seed);</code>  Utility</li> </ul> <ul> <li>\u2705 <code>virtual void GenerateRandomSeed();</code> </li> </ul> <ul> <li>\u274c <code>virtual void TickEditor(float DeltaTime);</code>  Called every frame</li> </ul>"},{"location":"purpleprint/core/api/actors/purpleprint-core-manager-actor.html#classstruct-apurpleprintcoremanageractor","title":"Class/Struct: APurpleprintCoreManagerActor","text":"<ul> <li><code>USceneComponent* SceneComp;</code></li> </ul> <p>Sets default values for this actor's properties  </p> <ul> <li> <p><code>UBillboardComponent* IconBB;</code></p> </li> <li> <p><code>UPurpleprintCoreManagerComponent* ManagerComp;</code></p> </li> <li> <p><code>int32 RandomSeed = 0;</code></p> </li> </ul> <p>Called when an instance of this class is placed (in editor) or spawned. @param  Transform           The transform the actor was constructed at. Allow actors to initialize themselves on the C++ side after all of their components have been initialized, only called during gameplay Called when the game starts or when spawned  </p> <ul> <li> <p><code>FRandomStream RandomStream;</code></p> </li> <li> <p><code>bool bDebug = false;</code></p> </li> </ul>"},{"location":"purpleprint/core/api/components/purpleprint-core-cable-component.html","title":"PurpleprintCoreCableComponent.h","text":""},{"location":"purpleprint/core/api/components/purpleprint-core-cable-component.html#classstruct-upurpleprintcorecablecomponent","title":"Class/Struct: UPurpleprintCoreCableComponent","text":"<ul> <li><code>FVector PreviousWorldLocation;</code></li> </ul>"},{"location":"purpleprint/core/api/components/purpleprint-core-manager-component.html","title":"PurpleprintCoreManagerComponent.h","text":""},{"location":"purpleprint/core/api/components/purpleprint-core-manager-component.html#classstruct-upurpleprintcoremanagercomponent-inherits-from-uactorcomponent","title":"Class/Struct: UPurpleprintCoreManagerComponent (inherits from UActorComponent)","text":"<ul> <li>\u274c <code>virtual void TickEditorComponent(float DeltaTime);</code> </li> </ul>"},{"location":"purpleprint/core/api/components/purpleprint-core-manager-component.html#classstruct-upurpleprintcoremanagercomponent","title":"Class/Struct: UPurpleprintCoreManagerComponent","text":"<ul> <li> <p><code>FVector WorldCameraLocation;</code></p> </li> <li> <p><code>FRotator WorldCameraRotation;</code></p> </li> </ul>"},{"location":"purpleprint/core/api/player/purpleprint-hud.html","title":"PurpleprintHUD.h","text":""},{"location":"purpleprint/core/api/player/purpleprint-hud.html#classstruct-apurpleprinthud-inherits-from-ahud","title":"Class/Struct: APurpleprintHUD (inherits from AHUD)","text":"<ul> <li>\u2705 <code>void SetControlMode(bool bInGame);</code> </li> </ul> <ul> <li>\u2705 <code>void DisplayInGameMenu(bool bDisplay, bool bMenuCall = false);</code> </li> </ul>"},{"location":"purpleprint/core/api/player/purpleprint-hud.html#classstruct-apurpleprinthud","title":"Class/Struct: APurpleprintHUD","text":"<ul> <li> <p><code>UPurpleprintUserWidget* Widget;</code></p> </li> <li> <p><code>bool bMenuUIOnly = true;</code></p> </li> </ul>"},{"location":"purpleprint/core/api/ui/purpleprint-user-widget.html","title":"PurpleprintUserWidget.h","text":""},{"location":"purpleprint/core/api/ui/purpleprint-user-widget.html#classstruct-upurpleprintuserwidget-inherits-from-uuserwidget","title":"Class/Struct: UPurpleprintUserWidget (inherits from UUserWidget)","text":"<ul> <li>\u274c <code>void DisplaySubtitles(const FText&amp; Text);</code>  Sets default values for this actor's properties Called every frame</li> </ul> <ul> <li>\u274c <code>void OnSettingsUpdate();</code>  Need to be ufunction in order to bind, runtime fail</li> </ul> <ul> <li>\u2705 <code>void DisplaySubtitlesWidget(const FText&amp; Text, const bool bVisible = false);</code> </li> </ul> <ul> <li>\u2705 <code>void SetSubtitlesInfo(const int32&amp; Size, const FLinearColor&amp; Color, const FLinearColor&amp; BackgroundColor);</code> </li> </ul> <ul> <li>\u2705 <code>void GetSubtitlesInfo(int32&amp; Size, FLinearColor&amp; Color, FLinearColor&amp; BackgroundColor);</code> </li> </ul> <ul> <li>\u2705 <code>void OnDisplayInGameMenu(bool bDisplay);</code> </li> </ul> <ul> <li>\u274c <code>virtual void OnDisplayInGameMenu_Implementation(bool bDisplay);</code> </li> </ul> <ul> <li>\u2705 <code>void ReturnToMenu();</code> </li> </ul> <ul> <li>\u274c <code>virtual void ReturnToMenu_Implementation();</code> </li> </ul> <ul> <li>\u2705 <code>void ReturnToGame();</code> </li> </ul> <ul> <li>\u274c <code>virtual void ReturnToGame_Implementation();</code> </li> </ul>"},{"location":"purpleprint/core/api/ui/purpleprint-user-widget.html#classstruct-upurpleprintuserwidget","title":"Class/Struct: UPurpleprintUserWidget","text":"<ul> <li> <p><code>int32 SubtitlesSize;</code></p> </li> <li> <p><code>FLinearColor SubtitlesColor;</code></p> </li> <li> <p><code>FLinearColor SubtitlesBackgroundColor;</code></p> </li> <li> <p><code>bool bSubtitlesEnabled = true;</code></p> </li> </ul>"},{"location":"purpleprint/path/index.html","title":"Introduction","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"purpleprint/path/index.html#features","title":"Features","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> Method Description CPU      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p>System Requirements</p> <p>Operating System: Windows 7 (x64), Windows 8 (x64), or Windows 10 (x64)</p> <p>RAM: 4 GB or more</p> <p>Display Resolution: Minimum 1280 x 720</p> <p>Processor: 2.8 GHz or higher (dual-core, quad-thread recommended)</p> <p>Graphics Card: Compatible with standard image processing applications</p> <p>Storage: At least 100 MB of free space</p> <p>Ctrl+Alt+Del</p> <p>Linux non official support</p> <p>Works on Linux using Wine but we don't provide official support right now.</p>"},{"location":"purpleprint/path/index.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"purpleprint/placer/index.html","title":"Introduction","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"purpleprint/placer/index.html#features","title":"Features","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul> Method Description CPU      Fetch resource <code>PUT</code>  Update resource <code>DELETE</code>      Delete resource <p>System Requirements</p> <p>Operating System: Windows 7 (x64), Windows 8 (x64), or Windows 10 (x64)</p> <p>RAM: 4 GB or more</p> <p>Display Resolution: Minimum 1280 x 720</p> <p>Processor: 2.8 GHz or higher (dual-core, quad-thread recommended)</p> <p>Graphics Card: Compatible with standard image processing applications</p> <p>Storage: At least 100 MB of free space</p> <p>Ctrl+Alt+Del</p> <p>Linux non official support</p> <p>Works on Linux using Wine but we don't provide official support right now.</p>"},{"location":"purpleprint/placer/index.html#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"}]}